{"name":"welcome to the resemble Project","tagline":"","body":"![image](https://github.com/l-ramirez-lopez/resemble/blob/master/Installers/resemble_logo.png?raw=true) \r\n# Regression and similarity evaluation for memory-based learning in spectral chemometrics Â©\r\n_Leonardo Ramirez-Lopez & Antoine Stevens_\r\n\r\n***\r\n\r\nVisit the [`resemble` site here](http://l-ramirez-lopez.github.io/resemble/)\r\n\r\nYou can install the `resemble` package directly from github using [`devtools`](http://cran.r-project.org/web/packages/devtools/index.html) (with a proper installed version of [Rtools](http://cran.r-project.org/bin/windows/Rtools/)):\r\n\r\n```\r\nrequire(\"devtools\")\r\ninstall_github(\"resemble\",\"l-ramirez-lopez\")\r\n```\r\n\r\nYou can also download the [binary (.zip) file from here](https://github.com/l-ramirez-lopez/resemble/blob/master/Installers/resemble_1.0.zip?raw=true) or the [source file (.tar.gz) from here](https://github.com/l-ramirez-lopez/resemble/blob/master/Installers/resemble_1.0.tar.gz?raw=true). Remeber you should have R>3.0.0. Supose you downloaded the binary file to 'C:/MyFolder/', then you should be able to install the package as follows:\r\n\r\nFirst, if you do not have the following packages installed, you should install them first\r\n```\r\ninstall.packages('Rcpp')\r\ninstall.packages('RcppArmadillo')\r\ninstall.packages('pls')\r\ninstall.packages('foreach')\r\ninstall.packages('iterators')\r\n```\r\nThen, install `resemble`\r\n\r\n```\r\ninstall.packages('C:/MyFolder/resemble_1.0.zip')\r\n````\r\nor\r\n\r\n```\r\ninstall.packages('C:/MyFolder/resemble_1.0.tar.gz', type = 'source')\r\n```\r\n\r\nAfter installing `resemble` you should be also able to run the following lines:\r\n\r\n```\r\nrequire(resemble)\r\n\r\nhelp(mbl)\r\n\r\n#install.packages('prospectr')\r\nrequire(prospectr)\r\n\r\ndata(NIRsoil)\r\n\r\nXu <- NIRsoil$spc[!as.logical(NIRsoil$train),]\r\nYu <- NIRsoil$CEC[!as.logical(NIRsoil$train)]\r\nYr <- NIRsoil$CEC[as.logical(NIRsoil$train)]\r\nXr <- NIRsoil$spc[as.logical(NIRsoil$train),]\r\n\r\nXu <- Xu[!is.na(Yu),]\r\nXr <- Xr[!is.na(Yr),]\r\n\r\nYu <- Yu[!is.na(Yu)]\r\nYr <- Yr[!is.na(Yr)]\r\n\r\n# Example of the mbl function\r\n# A mbl approach (the spectrum-based learner) as implemented in Ramirez-Lopez et al. (2013)\r\n# An exmaple where Yu is supposed to be unknown, but the Xu (spectral variables) are known\r\nctrl1 <- mblController(sm = 'pc', pcSelection = list('opc', 40),\r\n                       valMethod = 'NNv',\r\n                       scaled = TRUE, center = TRUE)\r\n\r\nsbl.u <- mbl(Yr = Yr, Xr = Xr, Yu = NULL, Xu = Xu,\r\n             mblCtrl = ctrl1,\r\n             dissUsage = 'predictors',\r\n             k = seq(40, 150, by = 10),\r\n             method = 'gpr')\r\n\r\ngetPredictions(sbl.u)\r\n````\r\n\r\n[`resemble`](http://l-ramirez-lopez.github.io/resemble/) implements a function dedicated to non-linear modelling of complex visible and infrared spectral data based on memory-based learning (MBL, _a.k.a_ instance-based learning or local modelling in the chemometrics literature). The package also includes functions for: computing and evaluate spectral similarity/dissimilarity matrices; projecting the spectra onto low dimensional orthogonal variables; removing irrelevant spectra from a reference set; etc. \r\n\r\n***\r\nThe functions for computing and evaluate spectral similarity/dissimilarity matrices can be summarized as follows:\r\n\r\n__`fDiss`__: Euclidean and Mahalanobis distances as well as the cosine dissimilarity (_a.k.a_ spectral angle mapper)              \r\n__`corDiss`:__                correlation and moving window correlation dissimilarity                                                 \r\n__`sid`__:                    spectral information divergence between spectra or between the probability distributions of spectra      \r\n__`orthoDiss`__:              principal components and partial least squares dissimilarity (including several options)                  \r\n__`simEval`__:                evaluates a given similarity/dissimilarity matrix based on the concept of side information                 \r\n***\r\nThe functions for projecting the spectra onto low dimensional orthogonal variables are:\r\n\r\n__`pcProjection`__:            projects the spectra onto a principal component space                                                                              \r\n__`plsProjection`__:           projects the spectra onto a partial least squares component space  (_a.k.a_ projection to latent structures)                                       \r\n__`orthoProjection`__:         reproduces either the `pcProjection` or the `plsProjection` functions                                          \r\n***\r\nThe projection functions also offer different options for optimizing/selecting the number of components involved in the projection.\r\n\r\nThe functions modelling the spectra using memory-based learning are:\r\n\r\n__`mblControl`__:              controls some modelling aspects of the `mbl` function                         \r\n__`mbl`__:                     models the spectra by memory-based learning                                                    \r\n***\r\nSome additional miscellaneous functions are:\r\n\r\n__`print.mbl`__:prints a summary of the results obtained by the `mbl` function                           \r\n__`plot.mbl`__:                plots a summary of the results obtained by the `mbl` function                 \r\n__`print.localOrthoDiss`__:    prints local distance matrices generated with the `orthoDiss` function \r\n***\r\nIn order to expand a little bit more the explanation on the `mbl` function, let's define first the basic input datasets:\r\n\r\n- __Reference (training) set__: Dataset with *n* reference samples (e.g. spectral library) to be used in the calibration of spectral models. Xr represents the matrix of samples (containing the spectral predictor variables) and Yr represents a given response variable corresponding to Xr.\r\n\r\n- __Prediction set__ : Data set with _m_ samples where the response variable (Yu) is unknown. However it can be predicted by applying a spectral model (calibrated by using Xr and Yr) on the spectra of these samples (Xu). \r\n\r\nIn order to predict each value in Yu, the `mbl` function takes each sample in Xu and searches in Xr for its _k_-nearest neighbours (most spectrally similar samples). Then a (local) model is calibrated with these (reference) neighbours and it immediately predicts the correspondent value in Yu from Xu. In the function, the _k_-nearest neighbour search is performed by computing spectral similarity/dissimilarity matrices between samples. The `mbl` function offers the following regression options for calibrating the (local) models:\r\n                          \r\n__`'gpr'`__:                                   Gaussian process with linear kernel        \r\n__`'pls'`__:                                   Partial least squares                      \r\n__`'wapls1'`__:                                Weighted average partial least squares 1   \r\n__`'wapls2'`__:                                Weighted average partial least squares 2   \r\n\r\n## Keywords\r\n* _Infrared spectroscopy_\r\n* _Chemometrics_\r\n* _Local modelling_\r\n* _Spectral library_\r\n* _Lazy learning_\r\n* _Soil spectroscopy_\r\n\r\n## News\r\n\r\n2014-03: The package was released on CRAN!\r\n\r\n## Other R'elated stuff\r\n* Check our other project called [`prospectr`](http://antoinestevens.github.io/prospectr/)\r\n\r\n## Bug report and development version\r\n\r\nYou can send an email to the package maintainer (<leonardo.ramirez@usys.ethz.ch>; <leonardo.ramirez@wsl.ch>) or create an [issue](https://github.com/l-ramirez-lopez/resemble/issues) on github. \r\n\r\n\r\n\r\n<script>\r\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\r\n\r\n  ga('create', 'UA-46376363-1', 'l-ramirez-lopez.github.io');\r\n  ga('send', 'pageview');\r\n\r\n</script>\r\n\r\n","google":"UA-46376363-1","note":"Don't delete this file! It's used internally to help with page regeneration."}